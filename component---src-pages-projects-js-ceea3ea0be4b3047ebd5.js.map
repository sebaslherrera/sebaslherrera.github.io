{"version":3,"sources":["webpack:///./src/pages/projects.js","webpack:///./src/components/Project.js","webpack:///./src/components/Projects.js"],"names":["query","ProjectsPage","projects","data","allStrapiProjects","nodes","className","title","Project","description","github","stack","url","image","index","fluid","childImageSharp","map","tech","key","id","href","target","Projects","showLink","Title","project","to"],"mappings":"8FAAA,8FAmBaA,EAAK,aAyBHC,UAvCM,SAAC,GAIf,IAFyBC,EAE1B,EAHJC,KACEC,kBAAqBC,MAGvB,OACE,kBAAC,IAAD,KACE,6BAASC,UAAU,iBACjB,kBAAC,IAAD,CAAUJ,SAAUA,EAAUK,MAAM,qB,kHC4B7BC,EArCC,SAAC,GAA8D,IAA5DC,EAA2D,EAA3DA,YAAaF,EAA8C,EAA9CA,MAAOG,EAAuC,EAAvCA,OAAQC,EAA+B,EAA/BA,MAAOC,EAAwB,EAAxBA,IAAKC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,MAChE,OACE,6BAASR,UAAU,WAChBO,GACC,kBAAC,IAAD,CAAOE,MAAOF,EAAMG,gBAAgBD,MAAOT,UAAU,gBAEvD,yBAAKA,UAAU,gBACb,0BAAMA,UAAU,kBAAhB,IAAmCQ,EAAQ,EAA3C,KACA,4BAAKP,GAAS,iBACd,uBAAGD,UAAU,gBAAgBG,GAC7B,yBAAKH,UAAU,iBACZK,EAAMM,KAAI,SAAAC,GACT,OAAO,0BAAMC,IAAKD,EAAKE,IAAKF,EAAKX,UAEnC,yBAAKD,UAAU,iBACb,uBAAGe,KAAMX,EAAQY,OAAO,WACtB,kBAAC,IAAD,CAAgBhB,UAAU,kBAE5B,uBAAGe,KAAMT,EAAKU,OAAO,WACnB,kBAAC,IAAD,CAAehB,UAAU,uB,YCDxBiB,IAlBE,SAAC,GAAmC,IAAjCrB,EAAgC,EAAhCA,SAAUK,EAAsB,EAAtBA,MAAOiB,EAAe,EAAfA,SACnC,OACE,6BAASlB,UAAU,oBACjB,kBAACmB,EAAA,EAAD,CAAOlB,MAAOA,IACd,yBAAKD,UAAU,kCACZJ,EAASe,KAAI,SAACS,EAASZ,GACtB,OAAO,kBAAC,EAAD,eAASK,IAAKO,EAAQN,GAAIN,MAAOA,GAAWY,QAGtDF,GACC,kBAAC,IAAD,CAAMG,GAAG,YAAYrB,UAAU,kBAA/B","file":"component---src-pages-projects-js-ceea3ea0be4b3047ebd5.js","sourcesContent":["import React from \"react\"\nimport Layout from \"../components/Layout\"\nimport { graphql } from \"gatsby\"\nimport Projects from \"../components/Projects\"\n\nconst ProjectsPage = ({\n  data: {\n    allStrapiProjects: { nodes: projects },\n  },\n}) => {\n  return (\n    <Layout>\n      <section className=\"projects-page\">\n        <Projects projects={projects} title=\"All projects\" />\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  {\n    allStrapiProjects {\n      nodes {\n        github\n        id\n        description\n        title\n        url\n        image {\n          childImageSharp {\n            fluid {\n              ...GatsbyImageSharpFluid\n            }\n          }\n        }\n        stack {\n          id\n          title\n        }\n      }\n    }\n  }\n`\n\nexport default ProjectsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Image from \"gatsby-image\"\nimport { FaGithubSquare, FaShareSquare } from \"react-icons/fa\"\nconst Project = ({ description, title, github, stack, url, image, index }) => {\n  return (\n    <article className=\"project\">\n      {image && (\n        <Image fluid={image.childImageSharp.fluid} className=\"project-img\" />\n      )}\n      <div className=\"project-info\">\n        <span className=\"project-number\">0{index + 1}.</span>\n        <h3>{title || \"default title\"}</h3>\n        <p className=\"project-desc\">{description}</p>\n        <div className=\"project-stack\">\n          {stack.map(tech => {\n            return <span key={tech.id}>{tech.title}</span>\n          })}\n          <div className=\"project-links\">\n            <a href={github} target=\"__blank\">\n              <FaGithubSquare className=\"project-icon\" />\n            </a>\n            <a href={url} target=\"__blank\">\n              <FaShareSquare className=\"project-icon\" />\n            </a>\n          </div>\n        </div>\n      </div>\n    </article>\n  )\n}\n\nProject.propTypes = {\n  title: PropTypes.string.isRequired,\n  github: PropTypes.string.isRequired,\n  description: PropTypes.string.isRequired,\n  url: PropTypes.string.isRequired,\n  image: PropTypes.object.isRequired,\n  stack: PropTypes.arrayOf(PropTypes.object).isRequired,\n}\n\nexport default Project\n","import React from \"react\"\nimport Title from \"./Title\"\nimport Project from \"./Project\"\nimport { Link } from \"gatsby\"\nconst Projects = ({ projects, title, showLink }) => {\n  return (\n    <section className=\"section projects\">\n      <Title title={title} />\n      <div className=\"section-center projects-center\">\n        {projects.map((project, index) => {\n          return <Project key={project.id} index={index} {...project} />\n        })}\n      </div>\n      {showLink && (\n        <Link to=\"/projects\" className=\"btn center-btn\">\n          Projects\n        </Link>\n      )}\n    </section>\n  )\n}\n\nexport default Projects\n"],"sourceRoot":""}